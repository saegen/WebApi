//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataServiceTest.AdminService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApiSubscription", Namespace="http://schemas.datacontract.org/2004/07/Common")]
    [System.SerializableAttribute()]
    public partial class ApiSubscription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceIncVatAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlFriendlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallMinutes {
            get {
                return this.CallMinutesField;
            }
            set {
                if ((this.CallMinutesField.Equals(value) != true)) {
                    this.CallMinutesField = value;
                    this.RaisePropertyChanged("CallMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceIncVatAmount {
            get {
                return this.PriceIncVatAmountField;
            }
            set {
                if ((this.PriceIncVatAmountField.Equals(value) != true)) {
                    this.PriceIncVatAmountField = value;
                    this.RaisePropertyChanged("PriceIncVatAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlFriendly {
            get {
                return this.UrlFriendlyField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlFriendlyField, value) != true)) {
                    this.UrlFriendlyField = value;
                    this.RaisePropertyChanged("UrlFriendly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApiUser", Namespace="http://schemas.datacontract.org/2004/07/Common")]
    [System.SerializableAttribute()]
    public partial class ApiUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DataServiceTest.AdminService.ApiSubscription[] SubscriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCallMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceIncVatAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DataServiceTest.AdminService.ApiSubscription[] Subscriptions {
            get {
                return this.SubscriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionsField, value) != true)) {
                    this.SubscriptionsField = value;
                    this.RaisePropertyChanged("Subscriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCallMinutes {
            get {
                return this.TotalCallMinutesField;
            }
            set {
                if ((this.TotalCallMinutesField.Equals(value) != true)) {
                    this.TotalCallMinutesField = value;
                    this.RaisePropertyChanged("TotalCallMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPriceIncVatAmount {
            get {
                return this.TotalPriceIncVatAmountField;
            }
            set {
                if ((this.TotalPriceIncVatAmountField.Equals(value) != true)) {
                    this.TotalPriceIncVatAmountField = value;
                    this.RaisePropertyChanged("TotalPriceIncVatAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dataservice/interfaces/admin", ConfigurationName="AdminService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/Subscribe", ReplyAction="http://dataservice/interfaces/admin/IAdminService/SubscribeResponse")]
        void Subscribe(int userId, DataServiceTest.AdminService.ApiSubscription[] subscriptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/Subscribe", ReplyAction="http://dataservice/interfaces/admin/IAdminService/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync(int userId, DataServiceTest.AdminService.ApiSubscription[] subscriptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/Unsubscribe", ReplyAction="http://dataservice/interfaces/admin/IAdminService/UnsubscribeResponse")]
        void Unsubscribe(int userId, System.Guid subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/Unsubscribe", ReplyAction="http://dataservice/interfaces/admin/IAdminService/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync(int userId, System.Guid subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/UnsubscribeAll", ReplyAction="http://dataservice/interfaces/admin/IAdminService/UnsubscribeAllResponse")]
        void UnsubscribeAll(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/UnsubscribeAll", ReplyAction="http://dataservice/interfaces/admin/IAdminService/UnsubscribeAllResponse")]
        System.Threading.Tasks.Task UnsubscribeAllAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/GetUserSubscriptions", ReplyAction="http://dataservice/interfaces/admin/IAdminService/GetUserSubscriptionsResponse")]
        DataServiceTest.AdminService.ApiSubscription[] GetUserSubscriptions(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/GetUserSubscriptions", ReplyAction="http://dataservice/interfaces/admin/IAdminService/GetUserSubscriptionsResponse")]
        System.Threading.Tasks.Task<DataServiceTest.AdminService.ApiSubscription[]> GetUserSubscriptionsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/GetSubscriptionUsers", ReplyAction="http://dataservice/interfaces/admin/IAdminService/GetSubscriptionUsersResponse")]
        DataServiceTest.AdminService.ApiUser[] GetSubscriptionUsers(System.Guid subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/admin/IAdminService/GetSubscriptionUsers", ReplyAction="http://dataservice/interfaces/admin/IAdminService/GetSubscriptionUsersResponse")]
        System.Threading.Tasks.Task<DataServiceTest.AdminService.ApiUser[]> GetSubscriptionUsersAsync(System.Guid subscriptionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : DataServiceTest.AdminService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<DataServiceTest.AdminService.IAdminService>, DataServiceTest.AdminService.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Subscribe(int userId, DataServiceTest.AdminService.ApiSubscription[] subscriptions) {
            base.Channel.Subscribe(userId, subscriptions);
        }
        
        public System.Threading.Tasks.Task SubscribeAsync(int userId, DataServiceTest.AdminService.ApiSubscription[] subscriptions) {
            return base.Channel.SubscribeAsync(userId, subscriptions);
        }
        
        public void Unsubscribe(int userId, System.Guid subscriptionId) {
            base.Channel.Unsubscribe(userId, subscriptionId);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync(int userId, System.Guid subscriptionId) {
            return base.Channel.UnsubscribeAsync(userId, subscriptionId);
        }
        
        public void UnsubscribeAll(int userId) {
            base.Channel.UnsubscribeAll(userId);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAllAsync(int userId) {
            return base.Channel.UnsubscribeAllAsync(userId);
        }
        
        public DataServiceTest.AdminService.ApiSubscription[] GetUserSubscriptions(int userId) {
            return base.Channel.GetUserSubscriptions(userId);
        }
        
        public System.Threading.Tasks.Task<DataServiceTest.AdminService.ApiSubscription[]> GetUserSubscriptionsAsync(int userId) {
            return base.Channel.GetUserSubscriptionsAsync(userId);
        }
        
        public DataServiceTest.AdminService.ApiUser[] GetSubscriptionUsers(System.Guid subscriptionId) {
            return base.Channel.GetSubscriptionUsers(subscriptionId);
        }
        
        public System.Threading.Tasks.Task<DataServiceTest.AdminService.ApiUser[]> GetSubscriptionUsersAsync(System.Guid subscriptionId) {
            return base.Channel.GetSubscriptionUsersAsync(subscriptionId);
        }
    }
}
