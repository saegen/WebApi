//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.SubscriptionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dataservice/interfaces/subscription", ConfigurationName="SubscriptionService.ISubscriptionService")]
    public interface ISubscriptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/GetSubscriptions", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/GetSubscriptionsR" +
            "esponse")]
        Common.ApiSubscription[] GetSubscriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/GetSubscriptions", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/GetSubscriptionsR" +
            "esponse")]
        System.Threading.Tasks.Task<Common.ApiSubscription[]> GetSubscriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/GetUserSubscripti" +
            "ons", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/GetUserSubscripti" +
            "onsResponse")]
        Common.ApiSubscription[] GetUserSubscriptions(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/GetUserSubscripti" +
            "ons", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/GetUserSubscripti" +
            "onsResponse")]
        System.Threading.Tasks.Task<Common.ApiSubscription[]> GetUserSubscriptionsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/DeleteSubscriptio" +
            "n", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/DeleteSubscriptio" +
            "nResponse")]
        void DeleteSubscription(System.Guid subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/DeleteSubscriptio" +
            "n", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/DeleteSubscriptio" +
            "nResponse")]
        System.Threading.Tasks.Task DeleteSubscriptionAsync(System.Guid subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/UpdateSubscriptio" +
            "n", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/UpdateSubscriptio" +
            "nResponse")]
        Common.ApiSubscription UpdateSubscription(Common.ApiSubscription subValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/UpdateSubscriptio" +
            "n", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/UpdateSubscriptio" +
            "nResponse")]
        System.Threading.Tasks.Task<Common.ApiSubscription> UpdateSubscriptionAsync(Common.ApiSubscription subValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/CreateSubscriptio" +
            "n", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/CreateSubscriptio" +
            "nResponse")]
        int CreateSubscription(Common.ApiSubscription subValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/subscription/ISubscriptionService/CreateSubscriptio" +
            "n", ReplyAction="http://dataservice/interfaces/subscription/ISubscriptionService/CreateSubscriptio" +
            "nResponse")]
        System.Threading.Tasks.Task<int> CreateSubscriptionAsync(Common.ApiSubscription subValues);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubscriptionServiceChannel : WebApi.SubscriptionService.ISubscriptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriptionServiceClient : System.ServiceModel.ClientBase<WebApi.SubscriptionService.ISubscriptionService>, WebApi.SubscriptionService.ISubscriptionService {
        
        public SubscriptionServiceClient() {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.ApiSubscription[] GetSubscriptions() {
            return base.Channel.GetSubscriptions();
        }
        
        public System.Threading.Tasks.Task<Common.ApiSubscription[]> GetSubscriptionsAsync() {
            return base.Channel.GetSubscriptionsAsync();
        }
        
        public Common.ApiSubscription[] GetUserSubscriptions(int userId) {
            return base.Channel.GetUserSubscriptions(userId);
        }
        
        public System.Threading.Tasks.Task<Common.ApiSubscription[]> GetUserSubscriptionsAsync(int userId) {
            return base.Channel.GetUserSubscriptionsAsync(userId);
        }
        
        public void DeleteSubscription(System.Guid subscriptionId) {
            base.Channel.DeleteSubscription(subscriptionId);
        }
        
        public System.Threading.Tasks.Task DeleteSubscriptionAsync(System.Guid subscriptionId) {
            return base.Channel.DeleteSubscriptionAsync(subscriptionId);
        }
        
        public Common.ApiSubscription UpdateSubscription(Common.ApiSubscription subValues) {
            return base.Channel.UpdateSubscription(subValues);
        }
        
        public System.Threading.Tasks.Task<Common.ApiSubscription> UpdateSubscriptionAsync(Common.ApiSubscription subValues) {
            return base.Channel.UpdateSubscriptionAsync(subValues);
        }
        
        public int CreateSubscription(Common.ApiSubscription subValues) {
            return base.Channel.CreateSubscription(subValues);
        }
        
        public System.Threading.Tasks.Task<int> CreateSubscriptionAsync(Common.ApiSubscription subValues) {
            return base.Channel.CreateSubscriptionAsync(subValues);
        }
    }
}
