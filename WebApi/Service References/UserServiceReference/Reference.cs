//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.UserServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dataservice/interfaces/user", ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/AddUser", ReplyAction="http://dataservice/interfaces/user/IUserService/AddUserResponse")]
        int AddUser(Common.ApiUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/AddUser", ReplyAction="http://dataservice/interfaces/user/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(Common.ApiUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/AddUserSubscription", ReplyAction="http://dataservice/interfaces/user/IUserService/AddUserSubscriptionResponse")]
        Common.ApiSubscription AddUserSubscription(int userId, Common.ApiSubscription subscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/AddUserSubscription", ReplyAction="http://dataservice/interfaces/user/IUserService/AddUserSubscriptionResponse")]
        System.Threading.Tasks.Task<Common.ApiSubscription> AddUserSubscriptionAsync(int userId, Common.ApiSubscription subscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/DeleteUser", ReplyAction="http://dataservice/interfaces/user/IUserService/DeleteUserResponse")]
        void DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/DeleteUser", ReplyAction="http://dataservice/interfaces/user/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/GetUser", ReplyAction="http://dataservice/interfaces/user/IUserService/GetUserResponse")]
        Common.ApiUser GetUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/GetUser", ReplyAction="http://dataservice/interfaces/user/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<Common.ApiUser> GetUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/GetUsers", ReplyAction="http://dataservice/interfaces/user/IUserService/GetUsersResponse")]
        Common.ApiUser[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/GetUsers", ReplyAction="http://dataservice/interfaces/user/IUserService/GetUsersResponse")]
        System.Threading.Tasks.Task<Common.ApiUser[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/UpdateUser", ReplyAction="http://dataservice/interfaces/user/IUserService/UpdateUserResponse")]
        Common.ApiUser UpdateUser(Common.ApiUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dataservice/interfaces/user/IUserService/UpdateUser", ReplyAction="http://dataservice/interfaces/user/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<Common.ApiUser> UpdateUserAsync(Common.ApiUser user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : WebApi.UserServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<WebApi.UserServiceReference.IUserService>, WebApi.UserServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(Common.ApiUser user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(Common.ApiUser user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public Common.ApiSubscription AddUserSubscription(int userId, Common.ApiSubscription subscription) {
            return base.Channel.AddUserSubscription(userId, subscription);
        }
        
        public System.Threading.Tasks.Task<Common.ApiSubscription> AddUserSubscriptionAsync(int userId, Common.ApiSubscription subscription) {
            return base.Channel.AddUserSubscriptionAsync(userId, subscription);
        }
        
        public void DeleteUser(int userId) {
            base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public Common.ApiUser GetUser(int userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<Common.ApiUser> GetUserAsync(int userId) {
            return base.Channel.GetUserAsync(userId);
        }
        
        public Common.ApiUser[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<Common.ApiUser[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public Common.ApiUser UpdateUser(Common.ApiUser user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<Common.ApiUser> UpdateUserAsync(Common.ApiUser user) {
            return base.Channel.UpdateUserAsync(user);
        }
    }
}
